{%- liquid
  assign sizes                    = sizes                    | default: '30vw'
  assign quick_add_enable         = quick_add_enable         | default: settings.quick_add_enable, allow_false: true | default: true, allow_false: true
  assign quick_shop_enable        = quick_shop_enable        | default: settings.quick_shop_enable, allow_false: true | default: true, allow_false: true
  assign product_grid_image_size  = product_grid_image_size  | default: settings.product_grid_image_size | default: 'square'
  assign product_grid_image_fill  = product_grid_image_fill  | default: settings.product_grid_image_fill, allow_false: true | default: true, allow_false: true
  assign product_hover_image      = product_hover_image      | default: settings.product_hover_image, allow_false: true | default: false, allow_false: true
  assign enable_swatches          = enable_swatches          | default: settings.enable_swatches, allow_false: true | default: true, allow_false: true
  assign vendor_enable            = vendor_enable            | default: settings.vendor_enable, allow_false: true | default: true, allow_false: true
  assign product_save_amount      = product_save_amount      | default: settings.product_save_amount, allow_false: true | default: true, allow_false: true
  assign product_save_type        = product_save_type        | default: settings.product_save_type | default: 'dollar'
  assign enable_product_tags_opt  = enable_product_tags      | default: settings.enable_product_tags, allow_false: true | default: false, allow_false: true
  assign prefix_enable            = prefix_enable            | default: settings.prefix_enable, allow_false: true | default: false, allow_false: true
  assign image_style              = image_style              | default: 'square'
  assign product_tile_layout      = product_tile_layout      | default: false, allow_false: true
  assign product_grid_style       = product_grid_style       | default: settings.product_grid_style | default: 'grey-round'
  assign set_image_breathing_room = set_image_breathing_room | default: settings.set_image_breathing_room, allow_false: true | default: true, allow_false: true
  assign type                     = type                     | default: blank
  assign no_actions_passed        = no_actions               | default: false, allow_false: true

  assign on_sale = false
  if product.compare_at_price > product.price
    assign on_sale = true
  endif

  if set_image_breathing_room
    if settings.product_grid_image_margin == 0
      assign image_breathing_room = false
    else
      assign image_breathing_room = true
    endif
  endif

  assign show_actions_top_area = false
  if quick_shop_enable and no_actions_passed == false
    assign show_actions_top_area = true
  endif

  assign product_tags_string = product.tags | join: ','
  assign has_custom_label = false
  assign custom_labels_str = ''
  if product.metafields.theme.label and product.metafields.theme.label != blank
    assign has_custom_label = true
    assign custom_labels_str = product.metafields.theme.label.value
  elsif product_tags_string contains '_label_'
    for tag_item in product.tags
      if tag_item contains '_label_'
        assign tag_starts_with = tag_item | slice: 0
        if tag_starts_with == '_'
          assign has_custom_label = true
          assign custom_label_text = tag_item | replace: '_label_', ''
          assign custom_labels_str = custom_labels_str | append: custom_label_text | append: ','
        endif
      endif
    endfor
  endif

  assign preview_image = product.featured_media.preview_image
-%}
<div
  class="
    grid-item grid-product {{ classes }} grid-product-image-breathing-room--{{ image_breathing_room }}
    {% if product_tile_layout %}product-tile-layout--{{ product_tile_layout }}{% endif %}
    {% if product_grid_style contains 'gridlines' %}
      grid-product--gridlines overlay
    {% endif %}
  "
>
  <div
    class="product-grid-item"
    data-product-handle="{{ product.handle }}"
    data-product-id="{{ product.id }}"
    data-product-grid-item
  >
    <div class="grid-item__content">
      {%- if show_actions_top_area -%}
        <div class="grid-product__actions">
          {%- if quick_shop_enable and type != 'horizontal' -%}
            {%- capture quickShopButtonIcon_html -%}
              <button type="button" class="btn btn--circle btn--icon quick-product__btn js-modal-open-quick-modal-{{ product.id }} small--hide" title="{% render 't_with_fallback', key: 'labels.quick_shop', fallback: 'Quick shop' %}" data-handle="{{ product.handle }}">
                {% render 'icon', name: 'search' %}
                <span class="icon__fallback-text visually-hidden">{% render 't_with_fallback', key: 'labels.quick_shop', fallback: 'Quick shop' %}</span>
              </button>
            {%- endcapture -%}
            {%- capture quick_shop_modal_wrapper_content -%}{%- render 'tool-tip-trigger', context: 'QuickShop', button: quickShopButtonIcon_html, wrapper_class: 'quick-shop-modal' -%}{%- endcapture -%}
            {%- render 'quick-shop', product: product, content: quick_shop_modal_wrapper_content -%}
          {%- endif -%}
        </div>
      {%- endif -%}
      {%- liquid
        assign imageRatio = product_grid_image_size
        assign fixed_aspect_ratio = false
        unless imageRatio == 'natural'
          assign fixed_aspect_ratio = true
        endunless
        if image_style == 'circle'
          assign fixed_aspect_ratio = true
          assign imageRatio = 'square'
        endif
      -%}
      <a href="{{ product.url | within: collection }}" class="grid-item__link product-card-internal-link">
        <div class="grid-product__image-wrap">
          <div class="grid-product__tags">
            {%- if has_custom_label -%}
              {%- assign labels_array_items = custom_labels_str | split: ',' -%}
              {%- for label_text_item in labels_array_items -%}
                {%- if label_text_item != blank -%}
                  <div class="grid-product__tag grid-product__tag--custom">{{ label_text_item }}</div>
                {%- endif -%}
              {%- endfor -%}
            {%- endif -%}
            {%- unless product.available -%}<div class="grid-product__tag grid-product__tag--sold-out">{% render 't_with_fallback', key: 'info.sold_out', fallback: 'Sold Out' %}</div>{%- endunless -%}
            {%- if on_sale and product.available -%}<div class="grid-product__tag grid-product__tag--sale">{% render 't_with_fallback', key: 'labels.sale', fallback: 'Sale' %}</div>{%- endif -%}
          </div>
          {%- if fixed_aspect_ratio -%}
            <div class="grid__image-ratio grid__image-ratio--{% if image_style == 'circle' %}square{% else %}{{ product_grid_image_size }}{% endif %}">
              {%- capture image_classes_str -%}{% unless product_grid_image_fill %} grid__image-contain{% endunless %} image-style--{{ image_style }}{%- endcapture -%}
              {%- if preview_image != blank -%}{%- render 'image-element', img: preview_image, classes: image_classes_str, sizes: sizes, sizeVariable: sizeVariable, fallback: fallback, widths: '160, 200, 280, 360, 540, 720, 900' -%}
              {%- else -%}<div class="product-image--placeholder">{%- capture placeholder_name -%}product-{% cycle 1, 2, 3, 4, 5, 6 %}{%- endcapture -%}{%- render 'placeholder-svg', name: placeholder_name -%}</div>{%- endif -%}
            </div>
          {%- else -%}
            {%- liquid
              assign current_ratio = 1
              if preview_image != blank
                assign current_ratio = preview_image.aspect_ratio
              endif
            -%}
            <div {% if preview_image != blank %} style="height: 0; padding-bottom: {{ 100 | divided_by: current_ratio }}%;" {% endif %}>
              {%- if preview_image != blank -%}{%- render 'image-element', img: preview_image, classes: 'grid-product__image', sizes: sizes, sizeVariable: sizeVariable, fallback: fallback, widths: '360, 540, 720, 900, 1080' -%}
              {%- else -%}<div class="product-image--placeholder">{%- capture placeholder_name_alt -%}product-{% cycle 1, 2, 3, 4, 5, 6 %}{%- endcapture -%}{%- render 'placeholder-svg', name: placeholder_name_alt -%}</div>{%- endif -%}
            </div>
          {%- endif -%}
          {%- if product_hover_image and product.media.size > 1 -%}
            {%- for media_obj in product.media offset: 1 limit: 1 -%}
              {%- assign second_image_obj = media_obj.preview_image -%}
            {%- endfor -%}
            <div class="grid-product__secondary-image small--hide">
              {%- capture secondary_image_classes_str -%}image-style--{{ image_style }}{%- endcapture -%}
              {%- render 'image-element', img: second_image_obj, classes: secondary_image_classes_str, sizes: sizes, sizeVariable: sizeVariable, fallback: fallback, widths: '360, 540, 720, 1000' -%}
            </div>
          {%- endif -%}
          {%- if enable_swatches -%}
            {%- capture swatch_trigger_label_text -%}{% render 't_with_fallback', key: 'trigger.color_swatch', fallback: 'color' %}{%- endcapture -%}
            {%- assign swatch_trigger_label_downcased = swatch_trigger_label_text | downcase -%}
            {%- for option_obj in product.options_with_values -%}
              {%- liquid
                assign option_obj_name_downcased = option_obj.name | downcase
                assign is_color_option_flag = false
                if swatch_trigger_label_downcased contains option_obj_name_downcased
                  assign is_color_option_flag = true
                elsif swatch_trigger_label_downcased == 'color' and option_obj_name_downcased contains 'colour'
                  assign is_color_option_flag = true
                endif
              -%}
              {%- if is_color_option_flag -%}
                {%- assign current_option_loop_index = forloop.index0 -%}
                {%- assign option_values_collected_str = '' -%}
                {%- for variant_obj in product.variants -%}
                  {%- assign current_variant_opt_value = variant_obj.options[current_option_loop_index] -%}
                  {%- unless option_values_collected_str contains current_variant_opt_value -%}
                    {%- assign option_values_collected_str = option_values_collected_str | join: ',' | append: ',' | append: current_variant_opt_value | split: ',' -%}
                    {%- if variant_obj.image -%}<div class="grid-product__color-image grid-product__color-image--{{ variant_obj.id }}"></div>{%- endif -%}
                  {%- endunless -%}
                {%- endfor -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
        </div>
        <div class="grid-item__meta">
          <div class="grid-item__meta-main">
            {%- if enable_swatches and type == blank %}{%- render 'swatches', product: product -%}{%- endif -%}
            {%- if prefix_enable and product.metafields.archetype.prefix.value != blank -%}<div class="grid-product__vendor grid-product--prefix">{{ product.metafields.archetype.prefix.value | escape }}</div>{%- endif -%}
            <div class="grid-product__title">{{ product.title }}</div>
            {%- if vendor_enable -%}<div class="grid-product__vendor">{{ product.vendor }}</div>{%- endif -%}
          </div>
          <div class="grid-item__meta-secondary">
            <div class="grid-product__price">
              {%- if product.price_varies -%}<span class="grid-product__price--current">{%- render 'price-varies', price: product.price_min -%}</span>
              {%- else -%}
                {%- if on_sale -%}<span class="visually-hidden">{% render 't_with_fallback', key: 'labels.sale_price', fallback: 'Sale price' %}</span>{%- endif -%}
                <span class="grid-product__price--current">{%- render 'price', price: product.price -%}</span>
              {%- endif -%}
              {%- if on_sale -%}
                <span class="visually-hidden">{% render 't_with_fallback', key: 'labels.regular_price', fallback: 'Regular price' %}</span>
                <span class="grid-product__price--original">{%- render 'price', price: product.compare_at_price -%}</span>
                {%- if product_save_amount -%}
                  {%- if product_save_type == 'dollar' -%}{%- capture saved_amount_display_value -%}{{ product.compare_at_price | minus: product.price | money_without_trailing_zeros }}{%- endcapture -%}
                  {%- else -%}{%- capture saved_amount_display_value -%}{{ product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round }}%{%- endcapture -%}
                  {%- endif -%}
                  <span class="grid-product__price--savings">
                    {% assign t_info_save_amount_str = 'info.save_amount' | t: saved_amount: saved_amount_display_value %}
                    {%- capture fallback_t_info_save_amount_str -%}Save {{ saved_amount_display_value }}{%- endcapture -%}
                    {% render 't_with_fallback', t: t_info_save_amount_str, fallback: fallback_t_info_save_amount_str %}
                  </span>
                {%- endif -%}
              {%- endif -%}
              {%- assign displayed_product_variant = product.selected_or_first_available_variant -%}
              {%- if displayed_product_variant.unit_price_measurement -%}
                <div class="product__unit-price">
                  {%- capture unit_price_base_unit_display_text -%}{%- if displayed_product_variant.unit_price_measurement -%}{%- if displayed_product_variant.unit_price_measurement.reference_value != 1 -%}{{ displayed_product_variant.unit_price_measurement.reference_value }}{%- endif -%}{{ displayed_product_variant.unit_price_measurement.reference_unit }}{%- endif -%}{%- endcapture -%}
                  {{ displayed_product_variant.unit_price | money }}/{{ unit_price_base_unit_display_text }}
                </div>
              {%- endif -%}
            </div>
          </div>
          {%- if enable_swatches and type == 'horizontal' %}{%- render 'swatches', product: product -%}{%- endif -%}
          {%- if quick_add_enable and no_actions_passed == false -%}
            <div class="grid-product__add-wrap">
              {%- if product.available -%}
                {%- if product.variants.size > 1 -%}
                  {%- capture quick_add_button_multi_variant_output_html -%}
                  <button
                    type="button"
                    class="grid-product__atc-button js-quick-add-form js-modal-open-quick-add"
                    title="{% render 't_with_fallback', key: 'products.product.select_options', fallback: 'Select options' %}"
                  >
                    {% render 't_with_fallback', key: 'products.product.select_options', fallback: 'Select options' %}
                  </button>
                  {%- endcapture -%}
                  {{ quick_add_button_multi_variant_output_html }}
                  {%- capture quick_add_modal_trigger_wrapper_content -%}
                    {%- render 'tool-tip-trigger', button: quick_add_button_multi_variant_output_html, context: 'QuickAdd', wrapper_class: 'quick-add-modal' -%}
                  {%- endcapture -%}
                  {%- render 'quick-add', product: product, content: quick_add_modal_trigger_wrapper_content -%}
                {%- else -%}
                  <form method="post" action="{{ routes.cart_add_url }}" class="grid-product__direct-add-form" data-productid="{{ product.id }}">
                    <input type="hidden" name="id" value="{{ displayed_product_variant.id }}">
                    <button
                      type="submit"
                      name="add"
                      class="grid-product__atc-button"
                    >
                      {% render 't_with_fallback', key: 'actions.add_to_cart', fallback: 'Add to cart' %}
                    </button>
                  </form>
                {%- endif -%}
              {%- else -%}
                <button type="button" class="grid-product__atc-button" disabled>
                  {% render 't_with_fallback', key: 'info.sold_out', fallback: 'Sold out' %}
                </button>
              {%- endif -%}
            </div>
          {%- endif -%}
        </div>
      </a>
      {%- if enable_product_tags_opt %}{% render 'product-tags', product: product %}{% endif -%}
    </div>
  </div>
</div>
{% style %}

  .grid-item[data-product-id="{{ product.id }}"] .grid-item__meta > .grid-item__meta-main,
  .grid-item[data-product-id="{{ product.id }}"] .grid-item__meta > .grid-item__meta-secondary {
    flex-shrink: 0;
    width: 100%;
  }

  .grid-item[data-product-id="{{ product.id }}"] .grid-product__title {
    font-size: calc(var(--type-header-base-size) * 1.1);
    line-height: 1.3;
    margin-bottom: var(--spacing-1, 0.25rem);
  }
  .grid-item[data-product-id="{{ product.id }}"] .grid-product__vendor {
    font-size: var(--type-base-size);
    margin-bottom: var(--spacing-2, 0.5rem);
  }
  .grid-item[data-product-id="{{ product.id }}"] .grid-product__price {
    font-size: var(--type-header-base-size);
  }
  .grid-item[data-product-id="{{ product.id }}"] .grid-product__price--original,
  .grid-item[data-product-id="{{ product.id }}"] .grid-product__price--savings {
    font-size: var(--type-base-size);
  }
{% endstyle %}
